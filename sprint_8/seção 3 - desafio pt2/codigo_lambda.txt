import json
import requests
import boto3
from datetime import datetime

def lambda_handler(event, context):
    API_KEY = ''
    AWS_ACCESS_KEY_ID = ''
    AWS_SECRET_ACCESS_KEY = ''
    AWS_SESSION_TOKEN = ''
    AWS_REGION = 'us-east-1'
    bucket = 'pb-compass-bruno'
    
    # Função para buscar dados do filme
    def buscar_dados_filme(movie_id):
        url = f'https://api.themoviedb.org/3/movie/{movie_id}?api_key={API_KEY}&language=pt-BR'
        response = requests.get(url)
        if response.status_code == 200:
            return response.json()
        else:
            raise Exception(f'Erro ao buscar dados do filme {movie_id}: {response.status_code}')
    
    # Buscar dados dos filmes
    filmes = {
        'dunkirk': buscar_dados_filme(374720),
        'the_thin_red_line': buscar_dados_filme(8741)
    }
    
    # Conexão com o S3
    s3 = boto3.client('s3',
                      aws_access_key_id=AWS_ACCESS_KEY_ID,
                      aws_secret_access_key=AWS_SECRET_ACCESS_KEY,
                      aws_session_token=AWS_SESSION_TOKEN)
    
    # Obter data atual
    now = datetime.now()
    ano = now.year
    mes = now.month
    dia = now.day
    
    # Montar caminho para o arquivo no S3
    prefixo = f'Raw/tmdb/json/{ano}/{mes}/{dia}/'
    
    # Criar pastas necessárias
    s3.put_object(Bucket=bucket, Key=f"{prefixo}dummy")
    
    # Salvar arquivos JSON no S3
    for nome_filme, dados_filme in filmes.items():
        arquivo_json = f'{nome_filme}.json'
        key = prefixo + arquivo_json
        s3.put_object(Body=json.dumps(dados_filme), Bucket=bucket, Key=key)
    
    print('Dados dos filmes salvos no S3!')
